{"version":3,"file":"default-src_app_services_api_api_service_ts.js","mappings":"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","sources":["./src/app/services/address/address.service.ts","./src/app/services/api/api.service.ts","./src/app/services/auth/auth.service.ts","./src/app/services/order/order.service.ts","./src/app/services/product/product.service.ts","./src/app/services/store/store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressService {\n\n  constructor(\n    private auth:AuthService,\n    private http:HttpClient\n  ) { }\n\n  public GetUserAddressActive(){\n    return this.http.get(environment.ApiURL+'api/user/getAddressActive',{headers : this.auth.jwt()});\n  }\n  \n  public GetUserAddress(){\n    return this.http.get(environment.ApiURL+'api/user/getAddress',{headers : this.auth.jwt()});\n  }\n\n  public CreateAddress(data:any){\n    return this.http.post(environment.ApiURL+'api/user/addAddress',data,{headers : this.auth.jwt()});\n  }\n\n  public updateAddress(data:any){\n    return this.http.put(environment.ApiURL+'api/user/editAddress/'+data.id_ttca, data, {headers : this.auth.jwt()});\n  }\n  \n  public deleteAddress(id:any){\n    return this.http.delete(environment.ApiURL+'api/deleteAddress/'+id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { ProductService } from '../product/product.service';\nimport { StoreService } from '../store/store.service';\nimport { AddressService } from '../address/address.service';\nimport { OrderService } from '../order/order.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  productAdded: Subject<void> = new Subject<void>();\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private product: ProductService,\n    private store: StoreService,\n    private address: AddressService,\n    private order: OrderService,\n    ) { }\n\n    emitProductAdded() {\n      this.productAdded.next();\n    }\n\n  // Auth Api\n  public registerUser(form : any){\n    return this.authService.registerUser(form).subscribe( data => {\n      const jsonResponse = JSON.parse(JSON.stringify(data));\n      console.log(jsonResponse.id);\n      console.log(\"Success ==> \"+ JSON.stringify(data)); \n      this.router.navigate(['/c-tabs']);\n    },\n    err => {\n      console.error('Gagal Create user ===> ', err.status);\n    });\n  }\n\n  public loginUser(form : any){\n    return this.authService.loginUser(form)\n      .subscribe(async (res:any) =>{\n          console.log('Data User ===>'+JSON.stringify( res['data'].role))\n          console.log('Token ===>'+JSON.stringify( res['token']))\n          localStorage.setItem('role',res['data'].role)\n          this.authService.setToken(res['token'])\n          if(res['data'].role === 'customer'){\n            this.router.navigateByUrl('c-tabs')\n          }else if(res['data'].role === 'store'){\n            this.router.navigateByUrl('s-tabs')\n          }\n        });\n  }\n\n  //Product Services\n  public productByStore(id:any){\n    return this.product.productByStore(id)\n  }\n  \n  public productStore(){\n    return this.product.productStore()\n  }\n\n  public createProduct(data:any){\n    return this.product.createProduct(data)\n  }\n\n  public deleteProduct(id:any){\n    return this.product.deleteProduct(id)\n  }\n\n  public publish(id:any){\n    return this.product.publish(id)\n  }\n\n  public unpublish(id:any){\n    return this.product.unpublish(id)\n  }\n\n\n\n  // Store Services\n  getStore(){\n    return this.store.GetStore()\n  }\n\n  getStoreById(id:any){\n    return this.store.GetStoreById(id)\n  }\n\n\n  // Address Services\n  getUserAddressActive(){\n    return this.address.GetUserAddressActive()\n  }\n  \n  getUserAddress(){\n    return this.address.GetUserAddress()\n  }\n  \n  createAddress(data:any){\n    return this.address.CreateAddress(data)\n  }\n  \n  updateAddress(data:any){\n    return this.address.updateAddress(data)\n  }\n  \n  deleteAddress(id:any){\n    return this.address.deleteAddress(id)\n  }\n\n  // Order Services\n  addOrder(order:any){\n    return this.order.addOrder(order)\n  }\n  \n  getOrder(){\n    return this.order.getUserOrder()\n  }\n  \n  getOrderStore(){\n    return this.order.getStoreOrder()\n  }\n  \n  getOrderDetail(id:any){\n    return this.order.getOrderDetails(id)\n  }\n  \n  takeOrder(id:any){\n    return this.order.takeOrder(id)\n  }\n\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Preferences } from '@capacitor/preferences';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private tokenKey = 'auth_token';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  jwt(){\n    let token = localStorage.getItem('token')\n    return new HttpHeaders({\n      'Authorization': token,\n      'Access-Control-Allow-Origin' : '*'\n    })\n  }\n\n  setToken(token: string){\n    localStorage.setItem('token',token)\n  }\n\n  async removeToken(): Promise<void> {\n    await Preferences.remove({ key: this.tokenKey });\n  }\n\n  async isAuthenticated(): Promise<boolean> {\n    const token = await this.jwt();\n    return token !== null;\n  }\n\n  public registerUser(form : any){\n    return this.http.post(environment.ApiURL + 'api/register',\n      {\n        \"name_tmu\": form.name_tmu,\n        \"phone_tmu\": form.phone_tmu,\n        \"password\": form.password\n      },\n      { responseType: 'json'}\n    )\n  }\n\n  public loginUser(form : any){\n    return this.http.post(environment.ApiURL + 'api/login',\n      {\n        \"phone_tmu\": form.phone_tmu,\n        \"password\": form.password\n      },\n      { responseType: 'json'}\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  constructor(\n    private auth: AuthService,\n    private http: HttpClient\n  ) { }\n\n  addOrder(order:any){\n    return this.http.post(environment.ApiURL+'api/user/addOrder', order, {headers : this.auth.jwt()})\n  }\n  \n  getUserOrder(){\n    return this.http.get(environment.ApiURL+'api/user/showOrder',{headers : this.auth.jwt()})\n  }\n\n  getStoreOrder(){\n    return this.http.get(environment.ApiURL+'api/seller/orderStore',{headers : this.auth.jwt()})\n  }\n  \n  getOrderDetails(id:any){\n    return this.http.get(environment.ApiURL+'api/getOrderDetail/'+id,{headers : this.auth.jwt()})\n  }\n  \n  takeOrder(id:any){\n    return this.http.put(environment.ApiURL+'api/seller/takeOrder/'+id,'',{headers : this.auth.jwt()})\n    \n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  \n\n  constructor(\n    private http:HttpClient,\n    private auth:AuthService\n    ) { }\n\n  public productByStore(id:any){\n    return this.http.get(environment.ApiURL+'api/product/'+id);\n  }\n\n  public productStore(){\n    return this.http.get(environment.ApiURL+'api/seller/productStore',{headers : this.auth.jwt()})\n  }\n\n  public createProduct(data:any){\n    return this.http.post(environment.ApiURL+'api/seller/createProduct', data, {headers : this.auth.jwt()});\n  }\n\n  public deleteProduct(id:any){\n    return this.http.delete(environment.ApiURL+'api/seller/deleteProduct/'+id,{headers : this.auth.jwt()});\n  }\n\n  public publish(id:any){\n    return this.http.put(environment.ApiURL+'api/seller/publishProduct/'+id,'',{headers : this.auth.jwt()});\n  }\n\n  public unpublish(id:any){\n    return this.http.put(environment.ApiURL+'api/seller/unpublishProduct/'+id,'',{headers : this.auth.jwt()});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpClient} from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor(\n    private auth:AuthService,\n    private http:HttpClient\n  ) { }\n\n  public GetStore(){\n    return this.http.get(environment.ApiURL+'api/store');\n  }\n\n  public GetStoreById(id){\n    return this.http.get(environment.ApiURL+'api/storeId/'+id);\n  }\n\n\n\n}\n"],"names":["Injectable","AuthService","Router","ProductService","StoreService","AddressService","OrderService","Subject","ApiService","constructor","router","authService","product","store","address","order","emitProductAdded","productAdded","next","registerUser","form","subscribe","data","jsonResponse","JSON","parse","stringify","console","log","id","navigate","err","error","status","loginUser","res","role","localStorage","setItem","setToken","navigateByUrl","productByStore","productStore","createProduct","deleteProduct","publish","unpublish","getStore","GetStore","getStoreById","GetStoreById","getUserAddressActive","GetUserAddressActive","getUserAddress","GetUserAddress","createAddress","CreateAddress","updateAddress","deleteAddress","addOrder","getOrder","getUserOrder","getOrderStore","getStoreOrder","getOrderDetail","getOrderDetails","takeOrder","providedIn","HttpClient","HttpHeaders","Preferences","environment","http","jwt","token","getItem","removeToken","remove","key","tokenKey","isAuthenticated","post","ApiURL","name_tmu","phone_tmu","password","responseType"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}